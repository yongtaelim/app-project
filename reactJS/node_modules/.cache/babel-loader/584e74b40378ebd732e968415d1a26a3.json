{"ast":null,"code":"var _jsxFileName = \"C:\\\\app-workspace\\\\react-todo\\\\src\\\\components\\\\PhoneInfo.js\";\nimport React, { Component } from \"react\";\n\nclass PhoneInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 우리는 수정 버튼을 눌렀을 떄 editing 값을 true 로 설정해줄것입니다.\n      // 이 값이 true 일 때에는, 기존에 텍스트 형태로 보여주던 값들을\n      // input 형태로 보여주게 됩니다.\n      editing: false,\n      name: '',\n      phone: ''\n    };\n\n    this._handleRemove = () => {\n      const _this$props = this.props,\n            info = _this$props.info,\n            onRemove = _this$props.onRemove;\n      onRemove(info.id);\n    };\n\n    this._handleToggleEdit = () => {\n      const editing = this.state.editing;\n      this.setState({\n        editing: !editing\n      });\n    };\n\n    this._handleUpdate = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //editing 값이 바뀔때 처리할 로직\n    //수정을 누르면 기존의 값이 input에 나타나고 \n    //수정을 적용하면 input의 값들을 부모한테 전달한다.\n    console.log(prevProps.editing);\n    console.log(prevState.editing);\n    const _this$props2 = this.props,\n          info = _this$props2.info,\n          onUpdate = _this$props2.onUpdate; //editing 값이 false -> true\n\n    if (!prevState.editing && this.state.editing) {\n      this.setState({\n        name: info.name,\n        phone: info.phone\n      });\n    } //editing 값이 true -> false\n\n\n    if (prevState.editing && !this.state.editing) {\n      onUpdate(info.id, {\n        name: this.state.name,\n        phone: this.state.phone\n      });\n    }\n  }\n\n  render() {\n    const style = {\n      border: '1px solid black',\n      padding: '8px',\n      margin: '8px'\n    };\n    const editing = this.state.editing;\n\n    if (editing) {\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.name,\n        name: \"name\",\n        placeholder: \"\\uC774\\uB984\",\n        onChange: this._handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.phone,\n        name: \"phone\",\n        placeholder: \"\\uC804\\uD654\\uBC88\\uD638\",\n        onChange: this._handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this._handleToggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\uC801\\uC6A9\"), React.createElement(\"button\", {\n        onClick: this._handleRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"\\uC0AD\\uC81C\"));\n    }\n\n    const _this$props$info = this.props.info,\n          id = _this$props$info.id,\n          name = _this$props$info.name,\n          phone = _this$props$info.phone;\n    return React.createElement(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, name)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, phone), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, id), React.createElement(\"button\", {\n      onClick: this._handleToggleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\uC218\\uC815\"), React.createElement(\"button\", {\n      onClick: this._handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\"));\n  }\n\n}\n\nPhoneInfo.defaultProps = {\n  info: {\n    name: '이름',\n    phone: '010-0000-0000',\n    id: 0\n  }\n};\nexport default PhoneInfo;","map":{"version":3,"sources":["C:/app-workspace/react-todo/src/components/PhoneInfo.js"],"names":["React","Component","PhoneInfo","state","editing","name","phone","_handleRemove","props","info","onRemove","id","_handleToggleEdit","setState","_handleUpdate","e","target","value","componentDidUpdate","prevProps","prevState","console","log","onUpdate","render","style","border","padding","margin","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass PhoneInfo extends Component {\r\n    static defaultProps = {\r\n        info : {\r\n            name: '이름',\r\n            phone: '010-0000-0000',\r\n            id: 0\r\n        }\r\n    }\r\n\r\n    state = {\r\n        // 우리는 수정 버튼을 눌렀을 떄 editing 값을 true 로 설정해줄것입니다.\r\n        // 이 값이 true 일 때에는, 기존에 텍스트 형태로 보여주던 값들을\r\n        // input 형태로 보여주게 됩니다.\r\n        editing: false,\r\n        name: '',\r\n        phone: '',\r\n    }\r\n\r\n    _handleRemove = () => {\r\n        const { info, onRemove } = this.props;\r\n        onRemove(info.id);\r\n    }\r\n\r\n    _handleToggleEdit = () => {\r\n        const { editing } = this.state;\r\n        this.setState({\r\n            editing: !editing\r\n        });\r\n    }\r\n\r\n    _handleUpdate = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        //editing 값이 바뀔때 처리할 로직\r\n        //수정을 누르면 기존의 값이 input에 나타나고 \r\n        //수정을 적용하면 input의 값들을 부모한테 전달한다.\r\n\r\n        console.log(prevProps.editing);\r\n        console.log(prevState.editing);\r\n\r\n        const { info, onUpdate } = this.props;\r\n\r\n        //editing 값이 false -> true\r\n        if(!prevState.editing && this.state.editing) {            \r\n            this.setState({\r\n                name: info.name,\r\n                phone: info.phone,\r\n            });\r\n        }\r\n\r\n        //editing 값이 true -> false\r\n        if (prevState.editing && !this.state.editing) {\r\n            onUpdate(info.id, {\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n           border: '1px solid black',\r\n           padding: '8px',\r\n           margin: '8px'\r\n        };\r\n\r\n        const { editing } = this.state;\r\n\r\n        if (editing) {\r\n            return (\r\n                <div style={style}>\r\n                    <div>\r\n                        <input\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            placeholder=\"이름\"\r\n                            onChange={this._handleUpdate}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            value={this.state.phone}\r\n                            name=\"phone\"\r\n                            placeholder=\"전화번호\"\r\n                            onChange={this._handleUpdate}\r\n                        />\r\n                    </div>\r\n                    <button onClick={this._handleToggleEdit}>적용</button>\r\n                    <button onClick={this._handleRemove}>삭제</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const {\r\n            id, name, phone\r\n        } = this.props.info;\r\n\r\n        return (\r\n            <div style={style}>\r\n                <div><b>{name}</b></div>\r\n                <div>{phone}</div>\r\n                <div>{id}</div>\r\n                <button onClick={this._handleToggleEdit}>수정</button>\r\n                <button onClick={this._handleRemove}>삭제</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhoneInfo;"]},"metadata":{},"sourceType":"module"}